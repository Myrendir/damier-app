import * as React from "react";
import PropTypes from "prop-types";
import SquareDecorator from "../SquareDecorator";
import SquareDetails from "../SquareDetails";
import {useStore} from "react-context-hook";
import {useEffect, useState} from "react";
import get_exploitation from "../../services/exploitationService";

export default function DetailsExploitation({color, ...props}) {
    const [date] = useStore("date");
    const [nbAccidentsMateriels, setNbAccidentsMateriels] = useState(0);
    const [nbAccidentsCorporels, setNbAccidentsCorporels] = useState(0);
    const [causeAccident, setCauseAccident] = useState("");
    const [tauxControle, setTauxControle] = useState(0);
    const [sideBarcolor, setColor] = useStore("color",  "");

    useEffect(() => {
        setColor("#4887c6");
    },[]);

    function getLastDayOfMonth(year, month) {
        return new Date(year, month + 1, 0);
    }

    useEffect(
        () => {
            if (date != 0) {
                let newDate = new Date(date);
                let endDate = getLastDayOfMonth(newDate.getFullYear(), newDate.getMonth());
                endDate = endDate.toISOString().split('T')[0];
                get_exploitation(endDate).then(
                    r => {
                        let nbAccidentsMaterielsInside = 0;
                        let nbAccidentsCorporelsInside = 0;
                        let tauxControleInside = 0;
                        let human = {
                            val: 0,
                            label: "Humaine"
                        };
                        let info = {
                            val: 0,
                            label: "Intempérie"
                        };
                        let itemp = {
                            val: 0,
                            label: "Informatique"
                        };

                        r.data.forEach(item => {
                            nbAccidentsMaterielsInside += item.nbAccidentsMateriels;
                            nbAccidentsCorporelsInside += item.nbAccidentsCorporels;
                            tauxControleInside += item.tauxControle;
                            if (item.causeAccident === "HUMAINE") {
                                human.val++
                            }
                            if (item.causeAccident === "INTEMPÉRIE") {
                                itemp.val++
                            }
                            if (item.causeAccident === "INFORMATIQUE") {
                                info.val++
                            }
                        })
                        let res = [human, itemp, info];
                        if (Math.max(...res) === res[0]) {
                            setCauseAccident("HUMAINE")
                        }
                        if (Math.max(...res) === res[1]) {
                            setCauseAccident("INTEMPÉRIE")
                        }
                        if (Math.max(...res) === res[2]) {
                            setCauseAccident("INFORMATIQUE")
                        }
                        setNbAccidentsMateriels(nbAccidentsMaterielsInside);
                        setNbAccidentsCorporels(nbAccidentsCorporelsInside);
                        setTauxControle(tauxControleInside);
                    }
                )
            } else {
                get_exploitation().then(
                    r => {
                        console.log(r)
                        let nbAccidentsMaterielsInside = 0;
                        let nbAccidentsCorporelsInside = 0;
                        let tauxControleInside = 0;
                        let human = 0;
                        let info = 0;
                        let itemp = 0;

                        r.data.forEach(item => {
                            nbAccidentsMaterielsInside += item.nbAccidentsMateriels;
                            nbAccidentsCorporelsInside += item.nbAccidentsCorporels;
                            tauxControleInside += item.tauxControle;
                            if (item.causeAccident === "HUMAINE") {
                                human++
                            }
                            if (item.causeAccident === "INTEMPÉRIE") {
                                itemp++
                            }
                            if (item.causeAccident === "INFORMATIQUE") {
                                info++
                            }
                        })
                        let res = [human, itemp, info];
                        console.log(res)

                        if (Math.max(...res) === res[0]) {
                            setCauseAccident("HUMAINE")
                        }
                        if (Math.max(...res) === res[1]) {
                            setCauseAccident("INTEMPÉRIE")
                        }
                        if (Math.max(...res) === res[2]) {
                            setCauseAccident("INFORMATIQUE")
                        }
                        setNbAccidentsMateriels(nbAccidentsMaterielsInside);
                        setNbAccidentsCorporels(nbAccidentsCorporelsInside);
                        setTauxControle(tauxControleInside);
                    }
                )

            }

        },
        [date]
    )
    return (
        <div style={styles.columns} {...props}>
            <div style={styles.box}>
                <SquareDecorator color="#3a56a3"/>
                <SquareDetails btnColor="#094f66" color="#f8f8f8" title={"Nb d'accidents matériels"}
                               data={nbAccidentsMateriels} icon={"/ticket.svg"}/>
                <SquareDecorator color="#272472"/>
            </div>
            <div style={styles.box}>
                <SquareDetails color="#f8f8f8" btnColor="#094f66" title={"Nb d'accidents corporels"}
                               data={nbAccidentsCorporels} icon={"/ticket.svg"}/>
                <SquareDecorator color="#bcd8ef"/>
                <SquareDetails color="#f8f8f8" icon={"/ticket.svg"} title={"Cause d'accident"} data={causeAccident}
                               btnColor="#094f66"/>
            </div>

            <div style={styles.box}>
                <SquareDecorator color="#79b0e0"/>
                <SquareDetails btnColor="#094f66" title={"Taux de controle"} data={tauxControle} color="#f8f8f8"
                               icon={"/ticket.svg"}/>
                <SquareDecorator color="#4887c6"/>
            </div>
        </div>
    );
}

const styles = {
    columns: {
        flex:1,
        flexDirection: "column",
        display: "flex",
        justifyContent: "center",
    },
    box: {
        display: "flex",
        justifyContent: "center",
        width: "100%",
        flexDirection: "row",
        flexWrap: "wrap"
    },
};

DetailsExploitation.propTypes = {
    color: PropTypes.string,
};

DetailsExploitation.defaultProps = {
    color: "",
};
